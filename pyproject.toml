[build-system]
requires = [
    "setuptools >= 40.9.0", "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["pycds*"]

[tool.setuptools]
# By default, include-package-data is true, so this line is unnecessary but reassuring.
include-package-data = true
zip-safe = true

[tool.setuptools.package-data]
pycds = ["data/crmp_subset_data.sql"]

[project]
name = "PyCDS"
version = "4.0.1"
description = "An ORM representation of the PCDS and CRMP database"
keywords = ["sql", "database", "pcds", "crmp", "climate", "meteorology"]
requires-python = ">=3.8"
authors = [
    {name = "James Hiebert", email = "hiebert@uvic.ca"},
    {name = "Rod Glover", email = "rglover@uvic.ca"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Topic :: Internet",
    "Topic :: Scientific/Engineering",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

# This is a very conservative dependency delaration, in that it pins all dependencies all
# the way down. It may be possible to replace it with just the dependencies that were
# declared in the old setup.py, without pinning, as reproduced below.
#
#install_requires=[
#    "alembic",
#    "black",
#    "geoalchemy2",
#    "psycopg2",
#    "SQLAlchemy",
#    "sqlalchemy-citext",
#],
#
# That said, we must have SQLAlchemy < 2 and some other packagaes likewise constrained,
# so it won't be quite so easy.
dependencies = [
    "alembic == 1.5.2",
    "appdirs == 1.4.3",
    "attrs == 19.3.0",
    "black == 19.10b0",
    "click == 7.0",
    "GeoAlchemy2 == 0.6.3",
    "Mako == 1.1.0",
    "MarkupSafe == 1.1.1",
    "more-itertools == 7.2.0",
    "pathspec == 0.7.0",
    "psycopg2 == 2.8.4",
    "python-dateutil == 2.8.0",
    "python-editor == 1.0.4",
    "regex == 2020.1.8",
    "SQLAlchemy == 1.4.15",
    "toml == 0.10.0",
    "typed-ast == 1.4.1",
    "sqlalchemy-citext == 1.8.0",
]

[project.optional-dependencies]
test = [
    "alembic-verify == 0.1.4",
    "atomicwrites == 1.3.0",
    "importlib-metadata == 0.23",
    "pytest == 7.2.0",
    "pytest-describe == 2.0.1",
    "pytest-mock == 3.10.0",
    "py == 1.8.0",
    "scramp == 1.1.0",
    "testing.common.database == 2.0.3",
    "testing.postgresql == 1.3.0",
    "pg8000 == 1.13.2",
    "pluggy == 0.13.0",
    "six == 1.12.0",
    "sqlalchemy-diff == 0.1.5",
    "SQLAlchemy-Utils == 0.37.3",
    "zipp == 3.5.0",
]

[project.scripts]
# Does this actually work when manage-views is python file in a script dir?? Test!
# It doesn't.
# FIXME
#manage-views = "scripts.manage-views:main"
# It's not clear that any of the other scripts in script/ have any value.
# If they do, refactor them so that they can be called (move everything into
# a main() method without arguments) and add them here.

[project.urls]
homepage = "http://www.pacificclimate.org/"
repository = "https://github.com/pacificclimate/pycds"